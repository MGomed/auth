name: Go

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "cr.selcloud.ru/mgomed"
  IMAGE_NAME: "auth-service"
  CONTAINER_NAME: "auth-service-container"
  MIGRATOR_IMAGE_NAME: "auth-migrator"
  MIGRATOR_CONTAINER_NAME: "auth-migrator-container"
  DB_IMAGE_NAME: "postgres:14-alpine3.17"
  DB_CONTAINER_NAME: "auth-db-container"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4

        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version: '1.23'
            cache-dependency-path: go.sum

        - name: Build
          run: go build -o ./bin/ -v ./...

        - name: Test
          run: go test -v ./...

  linter:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61

          args: --timeout=30m --config=./.golangci.pipeline.yaml

  image-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create .env file for CI
        run: |
          echo "POSTGRES_DB=auth" >> build/.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> build/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> build/.env
          echo "DB_PORT=5432" >> build/.env
          echo "MIGRATION_DIR=./migrations" >> build/.env
          echo "SERVER_HOST=0.0.0.0" >> build/.env
          echo "SERVER_PORT=50051" >> build/.env

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push auth-service Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME -f build/Dockerfile.app .

      - name: Build and Push auth-service Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$MIGRATOT_IMAGE_NAME:$TAG_NAME -f build/Dockerfile.migrations build 